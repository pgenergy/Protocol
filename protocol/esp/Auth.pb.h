/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_AUTH_PB_H_INCLUDED
#define PB_AUTH_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _TokenRequest {
    char client_id[128];
} TokenRequest;

typedef struct _TokenResponse {
    char access_token[45];
    uint32_t expires_in;
    uint32_t status;
    bool has_status_message;
    char status_message[255];
    bool has_script;
    char script[255];
} TokenResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define TokenRequest_init_default                {""}
#define TokenResponse_init_default               {"", 0, 0, false, "", false, ""}
#define TokenRequest_init_zero                   {""}
#define TokenResponse_init_zero                  {"", 0, 0, false, "", false, ""}

/* Field tags (for use in manual encoding/decoding) */
#define TokenRequest_client_id_tag               1
#define TokenResponse_access_token_tag           1
#define TokenResponse_expires_in_tag             2
#define TokenResponse_status_tag                 3
#define TokenResponse_status_message_tag         4
#define TokenResponse_script_tag                 5

/* Struct field encoding specification for nanopb */
#define TokenRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   client_id,         1)
#define TokenRequest_CALLBACK NULL
#define TokenRequest_DEFAULT NULL

#define TokenResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   access_token,      1) \
X(a, STATIC,   SINGULAR, UINT32,   expires_in,        2) \
X(a, STATIC,   SINGULAR, UINT32,   status,            3) \
X(a, STATIC,   OPTIONAL, STRING,   status_message,    4) \
X(a, STATIC,   OPTIONAL, STRING,   script,            5)
#define TokenResponse_CALLBACK NULL
#define TokenResponse_DEFAULT NULL

extern const pb_msgdesc_t TokenRequest_msg;
extern const pb_msgdesc_t TokenResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define TokenRequest_fields &TokenRequest_msg
#define TokenResponse_fields &TokenResponse_msg

/* Maximum encoded size of messages (where known) */
#define AUTH_PB_H_MAX_SIZE                       TokenResponse_size
#define TokenRequest_size                        130
#define TokenResponse_size                       572

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
